// Controle de Pontos
let pontos = 0;

// Fun√ß√£o para adicionar pontos
function adicionarPontos(quantidade = 10) {
    pontos += quantidade;
    document.getElementById('pontos').textContent = pontos;
    alert(`Voc√™ ganhou ${quantidade} pontos! Total: ${pontos} pontos.`);
}

// Adicionando bot√µes para ganhar pontos dinamicamente
document.addEventListener("DOMContentLoaded", function () {
    const botoes = [
        { texto: "üèãÔ∏è Completar Treino do Dia (+10 pts)", pontos: 10 },
        { texto: "üßò Aula Especial (+15 pts)", pontos: 15 },
        { texto: "üì¢ Indicar um Amigo (+30 pts)", pontos: 30 },
        { texto: "üí≥ Assinar Plano Trimestral/Anual (+50 pts)", pontos: 50 }
    ];

    const container = document.getElementById("pontos-container");

    botoes.forEach(botaoInfo => {
        const botao = document.createElement("button");
        botao.textContent = botaoInfo.texto;
        botao.onclick = () => adicionarPontos(botaoInfo.pontos);
        container.appendChild(botao);
    });
});

// Chatbot
const respostas = {
    "oi": "Ol√°! tudo bem, Como posso ajudar?",
    "bom dia": "Bom dia! Como posso te ajudar hoje?",
    "boa tarde": "Boa tarde! Precisa de algo?",
    "boa noite": "Boa noite! Como posso te ajudar?",
    "obrigado" : "Por nada! passar bem.",
    "planos": "Oferecemos diferentes planos! Temos op√ß√µes mensais, trimestrais, semestrais e anuais.",
    "valor": "O valor varia de acordo com o plano escolhido. Podemos te ajudar a escolher o melhor para voc√™!",
    "hor√°rio": "Nosso hor√°rio de funcionamento √© das 08h √†s 23h.",
    "spinning": "√â uma aula de bike indoor cheia de energia!",
    "mensalidade" : "O valor varia de acordo com o plano escolhido. Voc√™ pode nos chamar ou vir at√© a academia para conhecer todas as op√ß√µes e escolher a que melhor se encaixa no seu bolso!",
    "ritbox": "√â uma mistura de dan√ßa e exerc√≠cios funcionais no ritmo da m√∫sica.",
    "abs": "√â um treino focado no fortalecimento do abd√¥men.",
    "luta": "Temos aulas de luta! Pergunte sobre as modalidades dispon√≠veis.",
    "dinheiro": "Sim, aceitamos pagamento em dinheiro, cart√£o e pix.",
    "voces tem plano fidelidade": "Temos planos com e sem fidelidade.",
    "experimental": "Temos aulas experimentais! Voc√™ pode agendar uma para conhecer a academia.",
    "desconto": "Temos promo√ß√µes para indica√ß√µes! Entre em contato para mais detalhes.",
    "personal": "Temos professores para ajudar nos treinos e oferecemos servi√ßo de personal trainer.",
    "fluxo": "Os hor√°rios de menor movimento s√£o das 09h √†s 11h e das 16h √†s 19h.",
    "crian√ßa": "Depende! Se ele for aluno e estiver na faixa et√°ria permitida, sim!"
};

// Normaliza o texto removendo acentos e deixando em min√∫sculas
function normalizarTexto(texto) {
    return texto.normalize("NFD").replace(/[\u0300-\u036f]/g, "").toLowerCase();
}

// Fun√ß√£o para encontrar a resposta mais pr√≥xima
function encontrarResposta(mensagem) {
    mensagem = normalizarTexto(mensagem);
    
    for (const chave in respostas) {
        if (mensagem.includes(chave)) {
            return respostas[chave]; // Retorna a resposta correspondente √† palavra-chave encontrada
        }
    }
    return "N√£o entendi, pode repetir?"; // Se n√£o encontrar nada, resposta padr√£o
}

function enviarMensagem() {
    const input = document.getElementById('chat-input');
    const mensagemOriginal = input.value.trim();
    if (mensagemOriginal === "") return; // Evita mensagens vazias

    adicionarMensagem("Voc√™", mensagemOriginal);

    // Simulando tempo de resposta (2 segundos)
    setTimeout(() => {
        const resposta = encontrarResposta(mensagemOriginal);
        adicionarMensagem("Bot", resposta);
    }, 1800);

    input.value = "";
}

function adicionarMensagem(remetente, texto) {
    const chatBody = document.getElementById('chat-body');
    if (!chatBody) return; // Evita erros se o chat n√£o estiver na p√°gina

    const msgDiv = document.createElement('div');
    msgDiv.classList.add(remetente === "Voc√™" ? "usuario" : "bot");
    msgDiv.textContent = `${remetente}: ${texto}`;
    chatBody.appendChild(msgDiv);
    chatBody.scrollTop = chatBody.scrollHeight; // Rolagem autom√°tica para a √∫ltima mensagem
}
